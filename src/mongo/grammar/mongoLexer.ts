// Generated from ./grammar/mongo.g4 by ANTLR 4.6-SNAPSHOT


/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

 /*tslint:disable */


import { ATN } from 'antlr4ts/atn/ATN';
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator';
import { NotNull } from 'antlr4ts/Decorators';
import { Override } from 'antlr4ts/Decorators';
import { RuleContext } from 'antlr4ts/RuleContext';
import { Vocabulary } from 'antlr4ts/Vocabulary';
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl';

import * as Utils from 'antlr4ts/misc/Utils';


export class mongoLexer extends Lexer {
	public static readonly T__0=1;
	public static readonly T__1=2;
	public static readonly T__2=3;
	public static readonly T__3=4;
	public static readonly T__4=5;
	public static readonly T__5=6;
	public static readonly T__6=7;
	public static readonly T__7=8;
	public static readonly RegexLiteral=9;
	public static readonly SingleLineComment=10;
	public static readonly MultiLineComment=11;
	public static readonly StringLiteral=12;
	public static readonly NullLiteral=13;
	public static readonly BooleanLiteral=14;
	public static readonly NumericLiteral=15;
	public static readonly DecimalLiteral=16;
	public static readonly LineTerminator=17;
	public static readonly SEMICOLON=18;
	public static readonly DOT=19;
	public static readonly DB=20;
	public static readonly IDENTIFIER=21;
	public static readonly DOUBLE_QUOTED_STRING_LITERAL=22;
	public static readonly SINGLE_QUOTED_STRING_LITERAL=23;
	public static readonly WHITESPACE=24;
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE"
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "RegexLiteral", 
		"RegexFlag", "SingleLineComment", "MultiLineComment", "StringLiteral", 
		"NullLiteral", "BooleanLiteral", "NumericLiteral", "DecimalLiteral", "LineTerminator", 
		"SEMICOLON", "DOT", "DB", "IDENTIFIER", "DOUBLE_QUOTED_STRING_LITERAL", 
		"SINGLE_QUOTED_STRING_LITERAL", "STRING_ESCAPE", "DecimalIntegerLiteral", 
		"ExponentPart", "DecimalDigit", "WHITESPACE"
	];

	private static readonly _LITERAL_NAMES: (string | undefined)[] = [
		undefined, "'('", "','", "')'", "'{'", "'}'", "'['", "']'", "':'", undefined, 
		undefined, undefined, undefined, "'null'", undefined, undefined, undefined, 
		undefined, "';'", "'.'", "'db'"
	];
	private static readonly _SYMBOLIC_NAMES: (string | undefined)[] = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "RegexLiteral", "SingleLineComment", "MultiLineComment", 
		"StringLiteral", "NullLiteral", "BooleanLiteral", "NumericLiteral", "DecimalLiteral", 
		"LineTerminator", "SEMICOLON", "DOT", "DB", "IDENTIFIER", "DOUBLE_QUOTED_STRING_LITERAL", 
		"SINGLE_QUOTED_STRING_LITERAL", "WHITESPACE"
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(mongoLexer._LITERAL_NAMES, mongoLexer._SYMBOLIC_NAMES, []);

	@Override
	@NotNull
	public get vocabulary(): Vocabulary {
		return mongoLexer.VOCABULARY;
	}


		private isExternalIdentifierText(text) {
			return text === 'db';
		}


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(mongoLexer._ATN, this);
	}

	@Override
	public get grammarFileName(): string { return "mongo.g4"; }

	@Override
	public get ruleNames(): string[] { return mongoLexer.ruleNames; }

	@Override
	public get serializedATN(): string { return mongoLexer._serializedATN; }

	@Override
	public get modeNames(): string[] { return mongoLexer.modeNames; }

	@Override
	public sempred(_localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 21:
			return this.IDENTIFIER_sempred(_localctx, predIndex);
		}
		return true;
	}
	private IDENTIFIER_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return !this.isExternalIdentifierText(this.text)
				;
		}
		return true;
	}

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02\x1A\xEC\b\x01"+
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06"+
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r"+
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t"+
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t"+
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t"+
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04"+
		"\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03"+
		"\t\x03\t\x03\n\x03\n\x03\n\x03\n\x06\nR\n\n\r\n\x0E\nS\x03\n\x03\n\x07"+
		"\nX\n\n\f\n\x0E\n[\v\n\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x07\fc\n\f"+
		"\f\f\x0E\ff\v\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x07\rn\n\r\f\r\x0E"+
		"\rq\v\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x05\x0Ez\n\x0E\x03"+
		"\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03"+
		"\x10\x03\x10\x03\x10\x03\x10\x03\x10\x05\x10\x8A\n\x10\x03\x11\x05\x11"+
		"\x8D\n\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x06\x12\x94\n\x12\r"+
		"\x12\x0E\x12\x95\x03\x12\x05\x12\x99\n\x12\x03\x12\x03\x12\x06\x12\x9D"+
		"\n\x12\r\x12\x0E\x12\x9E\x03\x12\x05\x12\xA2\n\x12\x03\x12\x03\x12\x05"+
		"\x12\xA6\n\x12\x05\x12\xA8\n\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14"+
		"\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17\x06\x17"+
		"\xB7\n\x17\r\x17\x0E\x17\xB8\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x07"+
		"\x18\xC0\n\x18\f\x18\x0E\x18\xC3\v\x18\x03\x18\x03\x18\x03\x19\x03\x19"+
		"\x03\x19\x07\x19\xCA\n\x19\f\x19\x0E\x19\xCD\v\x19\x03\x19\x03\x19\x03"+
		"\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x07\x1B\xD7\n\x1B\f\x1B\x0E"+
		"\x1B\xDA\v\x1B\x05\x1B\xDC\n\x1B\x03\x1C\x03\x1C\x05\x1C\xE0\n\x1C\x03"+
		"\x1C\x06\x1C\xE3\n\x1C\r\x1C\x0E\x1C\xE4\x03\x1D\x03\x1D\x03\x1E\x03\x1E"+
		"\x03\x1E\x03\x1E\x03o\x02\x02\x1F\x03\x02\x03\x05\x02\x04\x07\x02\x05"+
		"\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\x02"+
		"\x17\x02\f\x19\x02\r\x1B\x02\x0E\x1D\x02\x0F\x1F\x02\x10!\x02\x11#\x02"+
		"\x12%\x02\x13\'\x02\x14)\x02\x15+\x02\x16-\x02\x17/\x02\x181\x02\x193"+
		"\x02\x025\x02\x027\x02\x029\x02\x02;\x02\x1A\x03\x02\x0E\x03\x0211\x07"+
		"\x02iikkooww{{\x05\x02\f\f\x0F\x0F\u202A\u202B\f\x02\v\f\x0F\x0F\"\"$"+
		"$)+.0<=]_}}\x7F\x7F\x04\x02$$^^\x04\x02))^^\x05\x02$$))^^\x03\x023;\x04"+
		"\x02GGgg\x04\x02--//\x03\x022;\x04\x02\v\v\"\"\xFF\x02\x03\x03\x02\x02"+
		"\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02"+
		"\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02"+
		"\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02"+
		"\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02"+
		"\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02"+
		"%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03"+
		"\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02"+
		"\x02\x02;\x03\x02\x02\x02\x03=\x03\x02\x02\x02\x05?\x03\x02\x02\x02\x07"+
		"A\x03\x02\x02\x02\tC\x03\x02\x02\x02\vE\x03\x02\x02\x02\rG\x03\x02\x02"+
		"\x02\x0FI\x03\x02\x02\x02\x11K\x03\x02\x02\x02\x13M\x03\x02\x02\x02\x15"+
		"\\\x03\x02\x02\x02\x17^\x03\x02\x02\x02\x19i\x03\x02\x02\x02\x1By\x03"+
		"\x02\x02\x02\x1D{\x03\x02\x02\x02\x1F\x89\x03\x02\x02\x02!\x8C\x03\x02"+
		"\x02\x02#\xA7\x03\x02\x02\x02%\xA9\x03\x02\x02\x02\'\xAD\x03\x02\x02\x02"+
		")\xAF\x03\x02\x02\x02+\xB1\x03\x02\x02\x02-\xB6\x03\x02\x02\x02/\xBC\x03"+
		"\x02\x02\x021\xC6\x03\x02\x02\x023\xD0\x03\x02\x02\x025\xDB\x03\x02\x02"+
		"\x027\xDD\x03\x02\x02\x029\xE6\x03\x02\x02\x02;\xE8\x03\x02\x02\x02=>"+
		"\x07*\x02\x02>\x04\x03\x02\x02\x02?@\x07.\x02\x02@\x06\x03\x02\x02\x02"+
		"AB\x07+\x02\x02B\b\x03\x02\x02\x02CD\x07}\x02\x02D\n\x03\x02\x02\x02E"+
		"F\x07\x7F\x02\x02F\f\x03\x02\x02\x02GH\x07]\x02\x02H\x0E\x03\x02\x02\x02"+
		"IJ\x07_\x02\x02J\x10\x03\x02\x02\x02KL\x07<\x02\x02L\x12\x03\x02\x02\x02"+
		"MQ\x071\x02\x02NR\n\x02\x02\x02OP\x07^\x02\x02PR\x071\x02\x02QN\x03\x02"+
		"\x02\x02QO\x03\x02\x02\x02RS\x03\x02\x02\x02SQ\x03\x02\x02\x02ST\x03\x02"+
		"\x02\x02TU\x03\x02\x02\x02UY\x071\x02\x02VX\x05\x15\v\x02WV\x03\x02\x02"+
		"\x02X[\x03\x02\x02\x02YW\x03\x02\x02\x02YZ\x03\x02\x02\x02Z\x14\x03\x02"+
		"\x02\x02[Y\x03\x02\x02\x02\\]\t\x03\x02\x02]\x16\x03\x02\x02\x02^_\x07"+
		"1\x02\x02_`\x071\x02\x02`d\x03\x02\x02\x02ac\n\x04\x02\x02ba\x03\x02\x02"+
		"\x02cf\x03\x02\x02\x02db\x03\x02\x02\x02de\x03\x02\x02\x02eg\x03\x02\x02"+
		"\x02fd\x03\x02\x02\x02gh\b\f\x02\x02h\x18\x03\x02\x02\x02ij\x071\x02\x02"+
		"jk\x07,\x02\x02ko\x03\x02\x02\x02ln\v\x02\x02\x02ml\x03\x02\x02\x02nq"+
		"\x03\x02\x02\x02op\x03\x02\x02\x02om\x03\x02\x02\x02pr\x03\x02\x02\x02"+
		"qo\x03\x02\x02\x02rs\x07,\x02\x02st\x071\x02\x02tu\x03\x02\x02\x02uv\b"+
		"\r\x02\x02v\x1A\x03\x02\x02\x02wz\x051\x19\x02xz\x05/\x18\x02yw\x03\x02"+
		"\x02\x02yx\x03\x02\x02\x02z\x1C\x03\x02\x02\x02{|\x07p\x02\x02|}\x07w"+
		"\x02\x02}~\x07n\x02\x02~\x7F\x07n\x02\x02\x7F\x1E\x03\x02\x02\x02\x80"+
		"\x81\x07v\x02\x02\x81\x82\x07t\x02\x02\x82\x83\x07w\x02\x02\x83\x8A\x07"+
		"g\x02\x02\x84\x85\x07h\x02\x02\x85\x86\x07c\x02\x02\x86\x87\x07n\x02\x02"+
		"\x87\x88\x07u\x02\x02\x88\x8A\x07g\x02\x02\x89\x80\x03\x02\x02\x02\x89"+
		"\x84\x03\x02\x02\x02\x8A \x03\x02\x02\x02\x8B\x8D\x07/\x02\x02\x8C\x8B"+
		"\x03\x02\x02\x02\x8C\x8D\x03\x02\x02\x02\x8D\x8E\x03\x02\x02\x02\x8E\x8F"+
		"\x05#\x12\x02\x8F\"\x03\x02\x02\x02\x90\x91\x055\x1B\x02\x91\x93\x070"+
		"\x02\x02\x92\x94\x059\x1D\x02\x93\x92\x03\x02\x02\x02\x94\x95\x03\x02"+
		"\x02\x02\x95\x93\x03\x02\x02\x02\x95\x96\x03\x02\x02\x02\x96\x98\x03\x02"+
		"\x02\x02\x97\x99\x057\x1C\x02\x98\x97\x03\x02\x02\x02\x98\x99\x03\x02"+
		"\x02\x02\x99\xA8\x03\x02\x02\x02\x9A\x9C\x070\x02\x02\x9B\x9D\x059\x1D"+
		"\x02\x9C\x9B\x03\x02\x02\x02\x9D\x9E\x03\x02\x02\x02\x9E\x9C\x03\x02\x02"+
		"\x02\x9E\x9F\x03\x02\x02\x02\x9F\xA1\x03\x02\x02\x02\xA0\xA2\x057\x1C"+
		"\x02\xA1\xA0\x03\x02\x02\x02\xA1\xA2\x03\x02\x02\x02\xA2\xA8\x03\x02\x02"+
		"\x02\xA3\xA5\x055\x1B\x02\xA4\xA6\x057\x1C\x02\xA5\xA4\x03\x02\x02\x02"+
		"\xA5\xA6\x03\x02\x02\x02\xA6\xA8\x03\x02\x02\x02\xA7\x90\x03\x02\x02\x02"+
		"\xA7\x9A\x03\x02\x02\x02\xA7\xA3\x03\x02\x02\x02\xA8$\x03\x02\x02\x02"+
		"\xA9\xAA\t\x04\x02\x02\xAA\xAB\x03\x02\x02\x02\xAB\xAC\b\x13\x02\x02\xAC"+
		"&\x03\x02\x02\x02\xAD\xAE\x07=\x02\x02\xAE(\x03\x02\x02\x02\xAF\xB0\x07"+
		"0\x02\x02\xB0*\x03\x02\x02\x02\xB1\xB2\x07f\x02\x02\xB2\xB3\x07d\x02\x02"+
		"\xB3,\x03\x02\x02\x02\xB4\xB7\n\x05\x02\x02\xB5\xB7\x053\x1A\x02\xB6\xB4"+
		"\x03\x02\x02\x02\xB6\xB5\x03\x02\x02\x02\xB7\xB8\x03\x02\x02\x02\xB8\xB6"+
		"\x03\x02\x02\x02\xB8\xB9\x03\x02\x02\x02\xB9\xBA\x03\x02\x02\x02\xBA\xBB"+
		"\x06\x17\x02\x02\xBB.\x03\x02\x02\x02\xBC\xC1\x07$\x02\x02\xBD\xC0\n\x06"+
		"\x02\x02\xBE\xC0\x053\x1A\x02\xBF\xBD\x03\x02\x02\x02\xBF\xBE\x03\x02"+
		"\x02\x02\xC0\xC3\x03\x02\x02\x02\xC1\xBF\x03\x02\x02\x02\xC1\xC2\x03\x02"+
		"\x02\x02\xC2\xC4\x03\x02\x02\x02\xC3\xC1\x03\x02\x02\x02\xC4\xC5\x07$"+
		"\x02\x02\xC50\x03\x02\x02\x02\xC6\xCB\x07)\x02\x02\xC7\xCA\n\x07\x02\x02"+
		"\xC8\xCA\x053\x1A\x02\xC9\xC7\x03\x02\x02\x02\xC9\xC8\x03\x02\x02\x02"+
		"\xCA\xCD\x03\x02\x02\x02\xCB\xC9\x03\x02\x02\x02\xCB\xCC\x03\x02\x02\x02"+
		"\xCC\xCE\x03\x02\x02\x02\xCD\xCB\x03\x02\x02\x02\xCE\xCF\x07)\x02\x02"+
		"\xCF2\x03\x02\x02\x02\xD0\xD1\x07^\x02\x02\xD1\xD2\t\b\x02\x02\xD24\x03"+
		"\x02\x02\x02\xD3\xDC\x072\x02\x02\xD4\xD8\t\t\x02\x02\xD5\xD7\x059\x1D"+
		"\x02\xD6\xD5\x03\x02\x02\x02\xD7\xDA\x03\x02\x02\x02\xD8\xD6\x03\x02\x02"+
		"\x02\xD8\xD9\x03\x02\x02\x02\xD9\xDC\x03\x02\x02\x02\xDA\xD8\x03\x02\x02"+
		"\x02\xDB\xD3\x03\x02\x02\x02\xDB\xD4\x03\x02\x02\x02\xDC6\x03\x02\x02"+
		"\x02\xDD\xDF\t\n\x02\x02\xDE\xE0\t\v\x02\x02\xDF\xDE\x03\x02\x02\x02\xDF"+
		"\xE0\x03\x02\x02\x02\xE0\xE2\x03\x02\x02\x02\xE1\xE3\x059\x1D\x02\xE2"+
		"\xE1\x03\x02\x02\x02\xE3\xE4\x03\x02\x02\x02\xE4\xE2\x03\x02\x02\x02\xE4"+
		"\xE5\x03\x02\x02\x02\xE58\x03\x02\x02\x02\xE6\xE7\t\f\x02\x02\xE7:\x03"+
		"\x02\x02\x02\xE8\xE9\t\r\x02\x02\xE9\xEA\x03\x02\x02\x02\xEA\xEB\b\x1E"+
		"\x03\x02\xEB<\x03\x02\x02\x02\x1B\x02QSYdoy\x89\x8C\x95\x98\x9E\xA1\xA5"+
		"\xA7\xB6\xB8\xBF\xC1\xC9\xCB\xD8\xDB\xDF\xE4\x04\x02\x03\x02\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!mongoLexer.__ATN) {
			mongoLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(mongoLexer._serializedATN));
		}

		return mongoLexer.__ATN;
	}

}

