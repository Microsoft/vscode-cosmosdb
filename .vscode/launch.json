// A launch configuration that compiles the extension and then opens it inside a new window
{
	"version": "0.1.0",
	"configurations": [
		{
			"name": "Launch Extension",
			"type": "extensionHost",
			"request": "launch",
			"runtimeExecutable": "${execPath}",
			"args": [
				"--extensionDevelopmentPath=${workspaceRoot}"
			],
			"stopOnEntry": false,
			"sourceMaps": true,
			"outFiles": [
				"${workspaceRoot}/out/src/**/*.js"
			],
			"preLaunchTask": "npm"
		},
		{
			"name": "Launch Tests",
			"type": "extensionHost",
			"request": "launch",
			"runtimeExecutable": "${execPath}",
			"args": [
				"--extensionDevelopmentPath=${workspaceRoot}",
				"--extensionTestsPath=${workspaceRoot}/out/test"
			],
			"stopOnEntry": false,
			"sourceMaps": true,
			"outFiles": [
				"${workspaceRoot}/out/test"
			],
			"preLaunchTask": "npm"
		},
		{
			"type": "node",
			"request": "attach",
			"name": "Attach to Language Server",
			"protocol": "inspector",
			"port": 6005,
			"sourceMaps": true,
			"outFiles": [
				"${workspaceRoot}/out/**/*.js"
			]
		},
		{
			"type": "node",
			"request": "attach",
			"name": "Attach to Extension Host",
			"protocol": "inspector",
			"port": 5870,
			"sourceMaps": true,
			"restart": true,
			"outFiles": [
				"${workspaceRoot}/out/src"
			]
		},
		{
			// Instructions:
			// 1) Point 'input' to a debugging input file:
			// 2) Save the mongo.g4 file to cause debugging info to be generated
			// 3) Launch this configuration
			// 4) See Debug Console output
			// 5) In mongo.g4 file, in the editor context menu, you should see options for generating graphs
			"name": "Debug Mongo grammar",
			"type": "antlr-debug",
			"request": "launch",
			// This doesn't seem to work: "input": "${workspaceFolder}/${command:AskForTestInput}",
			"input": "c:/temp/debugger-input.mongo",
			"grammar": "grammar/mongo.g4",
			"startRule": "mongoCommands",
			"printParseTree": true,
			"visualParseTree": true
		}
	]
}
